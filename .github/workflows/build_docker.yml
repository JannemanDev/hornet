name: Build Docker

on:
  push:
    branch:
      - master

jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        
      - name: Setting env
        run: echo "GIT_SHA=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV 

      - name: Build HORNET Docker image
        run: docker build . -f docker/Dockerfile.dev -t iotaledger/hornet:$GIT_SHA -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:$GIT_SHA -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:latest

      - name: Build HORNET Docker image - ARM64
        run: docker build . -f docker/Dockerfile.arm64 -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:$GIT_SHA-arm64 -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:latest-arm64

      - name: Test HORNET Docker image
        run: docker run --rm --name hornet iotaledger/hornet:$GIT_SHA --version 2>/dev/null | grep -q "HORNET"

      - name: AWS login
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Docker login
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker push
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:$GIT_SHA
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:$GIT_SHA-arm64
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:latest-arm64

      - name: Docker push - Release
        run: |
          export RELEASE_VERSION=${GITHUB_REF#refs/*/}
          docker tag iotaledger/hornet:$GIT_SHA ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:$RELEASE_VERSION
          docker tag iotaledger/hornet:$GIT_SHA iotaledger/hornet:$RELEASE_VERSION
          docker tag iotaledger/hornet:$GIT_SHA iotaledger/hornet:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/hornet:$RELEASE_VERSION
          docker push iotaledger/hornet:$RELEASE_VERSION
          docker push iotaledger/hornet:latest
        if: startsWith(github.ref, 'refs/tags/v')        